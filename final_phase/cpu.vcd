$date
	Sun Nov 05 18:02:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module flopenr $end
$var wire 1 ! clk $end
$var wire 8 " d [7:0] $end
$var wire 1 # en $end
$var wire 1 $ reset $end
$var parameter 32 % WIDTH $end
$var reg 8 & q [7:0] $end
$upscope $end
$scope module testbench $end
$var wire 32 ' WriteData [31:0] $end
$var wire 1 ( MemWrite $end
$var wire 32 ) DataAdr [31:0] $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$scope module dut $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 32 , WriteData [31:0] $end
$var wire 32 - ReadData [31:0] $end
$var wire 32 . PC [31:0] $end
$var wire 1 ( MemWrite $end
$var wire 32 / Instr [31:0] $end
$var wire 32 0 DataAdr [31:0] $end
$scope module dmem1 $end
$var wire 1 * clk $end
$var wire 32 1 rd [31:0] $end
$var wire 1 ( we $end
$var wire 32 2 wd [31:0] $end
$var wire 32 3 a [31:0] $end
$upscope $end
$scope module imem1 $end
$var wire 32 4 rd [31:0] $end
$var wire 32 5 a [31:0] $end
$upscope $end
$scope module rvsingle $end
$var wire 32 6 Instr [31:0] $end
$var wire 32 7 ReadData [31:0] $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 1 8 Zero $end
$var wire 32 9 WriteData [31:0] $end
$var wire 2 : ResultSrc [1:0] $end
$var wire 1 ; RegWrite $end
$var wire 1 < PCSrc $end
$var wire 32 = PC [31:0] $end
$var wire 1 ( MemWrite $end
$var wire 1 > Jump $end
$var wire 2 ? ImmSrc [1:0] $end
$var wire 1 @ ALUSrc $end
$var wire 32 A ALUResult [31:0] $end
$var wire 4 B ALUControl [3:0] $end
$scope module c $end
$var wire 1 < PCSrc $end
$var wire 3 C funct3 [2:0] $end
$var wire 1 D funct7b5 $end
$var wire 7 E op [6:0] $end
$var wire 1 8 Zero $end
$var wire 2 F ResultSrc [1:0] $end
$var wire 1 ; RegWrite $end
$var wire 1 ( MemWrite $end
$var wire 1 > Jump $end
$var wire 2 G ImmSrc [1:0] $end
$var wire 1 H Branch $end
$var wire 1 @ ALUSrc $end
$var wire 2 I ALUOp [1:0] $end
$var wire 4 J ALUControl [3:0] $end
$scope module ad $end
$var wire 1 K RtypeSub $end
$var wire 3 L funct3 [2:0] $end
$var wire 1 D funct7b5 $end
$var wire 1 M opb5 $end
$var wire 2 N ALUOp [1:0] $end
$var reg 4 O ALUControl [3:0] $end
$upscope $end
$scope module md $end
$var wire 7 P op [6:0] $end
$var wire 2 Q ResultSrc [1:0] $end
$var wire 1 ; RegWrite $end
$var wire 1 ( MemWrite $end
$var wire 1 > Jump $end
$var wire 2 R ImmSrc [1:0] $end
$var wire 1 H Branch $end
$var wire 1 @ ALUSrc $end
$var wire 2 S ALUOp [1:0] $end
$var reg 11 T controls [10:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 4 U ALUControl [3:0] $end
$var wire 1 @ ALUSrc $end
$var wire 2 V ImmSrc [1:0] $end
$var wire 32 W Instr [31:0] $end
$var wire 1 < PCSrc $end
$var wire 32 X ReadData [31:0] $end
$var wire 1 ; RegWrite $end
$var wire 2 Y ResultSrc [1:0] $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 1 8 Zero $end
$var wire 32 Z WriteData [31:0] $end
$var wire 32 [ SrcB [31:0] $end
$var wire 32 \ SrcA [31:0] $end
$var wire 32 ] Result [31:0] $end
$var wire 32 ^ PCTarget [31:0] $end
$var wire 32 _ PCPlus4 [31:0] $end
$var wire 32 ` PCNext [31:0] $end
$var wire 32 a PC [31:0] $end
$var wire 32 b ImmExt [31:0] $end
$var wire 32 c ALUResult [31:0] $end
$scope module alu $end
$var wire 4 d ALUControl [3:0] $end
$var wire 32 e SrcB [31:0] $end
$var wire 32 f SrcA [31:0] $end
$var reg 32 g ALUResult [31:0] $end
$var reg 1 8 Zero $end
$var reg 32 h temp_result [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 i immsrc [1:0] $end
$var wire 25 j instr [31:7] $end
$var reg 32 k immext [31:0] $end
$upscope $end
$scope module pcadd4 $end
$var wire 32 l b [31:0] $end
$var wire 32 m y [31:0] $end
$var wire 32 n a [31:0] $end
$upscope $end
$scope module pcaddbranch $end
$var wire 32 o b [31:0] $end
$var wire 32 p y [31:0] $end
$var wire 32 q a [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 r d0 [31:0] $end
$var wire 32 s d1 [31:0] $end
$var wire 1 < s $end
$var wire 32 t y [31:0] $end
$var parameter 32 u WIDTH $end
$upscope $end
$scope module pcreg $end
$var wire 1 * clk $end
$var wire 32 v d [31:0] $end
$var wire 1 + reset $end
$var parameter 32 w WIDTH $end
$var reg 32 x q [31:0] $end
$upscope $end
$scope module resultmux $end
$var wire 32 y d0 [31:0] $end
$var wire 32 z d1 [31:0] $end
$var wire 32 { d2 [31:0] $end
$var wire 2 | s [1:0] $end
$var wire 32 } y [31:0] $end
$var parameter 32 ~ WIDTH $end
$upscope $end
$scope module rf $end
$var wire 1 ; RegWrite $end
$var wire 1 * clk $end
$var wire 5 !" rd_addr [4:0] $end
$var wire 5 "" rs1_addr [4:0] $end
$var wire 32 #" rs1_data [31:0] $end
$var wire 5 $" rs2_addr [4:0] $end
$var wire 32 %" rs2_data [31:0] $end
$var wire 32 &" write_data [31:0] $end
$var integer 32 '" i [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 (" d0 [31:0] $end
$var wire 32 )" d1 [31:0] $end
$var wire 1 @ s $end
$var wire 32 *" y [31:0] $end
$var parameter 32 +" WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 +"
b100000 ~
b100000 w
b100000 u
b1000 %
$end
#0
$dumpvars
b101 *"
b101 )"
b0 ("
b100000 '"
b101 &"
b0 %"
b101 $"
b0 #"
b0 ""
b10 !"
b101 }
b0 |
b100 {
bx z
b101 y
b0 x
b100 v
b100 t
b101 s
b100 r
b0 q
b101 p
b101 o
b0 n
b100 m
b100 l
b101 k
b1010000000000010 j
b0 i
b101 h
b101 g
b0 f
b101 e
b0 d
b101 c
b101 b
b0 a
b100 `
b100 _
b101 ^
b101 ]
b0 \
b101 [
b0 Z
b0 Y
bx X
b10100000000000100010011 W
b0 V
b0 U
b10010000100 T
b10 S
b0 R
b0 Q
b10011 P
b0 O
b10 N
0M
b0 L
0K
b0 J
b10 I
0H
b0 G
b0 F
b10011 E
0D
b0 C
b0 B
b101 A
1@
b0 ?
0>
b0 =
0<
1;
b0 :
b0 9
08
bx 7
b10100000000000100010011 6
b0 5
b10100000000000100010011 4
b101 3
b0 2
bx 1
b101 0
b10100000000000100010011 /
b0 .
bx -
b0 ,
1+
1*
b101 )
0(
b0 '
bx &
z$
z#
bz "
z!
$end
#5
0*
#10
1*
#15
0*
#20
1*
#22
0+
#25
0*
#30
b1100 ]
b1100 }
b1100 &"
b1100 )
b1100 0
b1100 3
b1100 A
b1100 c
b1100 g
b1100 y
b1100 h
b1100 [
b1100 e
b1100 *"
b1100 b
b1100 k
b1100 o
b1100 )"
b1100 $"
b11 !"
b11000000000000011 j
b1000 `
b1000 t
b1000 v
b110000000000000110010011 /
b110000000000000110010011 4
b110000000000000110010011 6
b110000000000000110010011 W
b10000 ^
b10000 p
b10000 s
b1000 _
b1000 m
b1000 r
b1000 {
b100 .
b100 5
b100 =
b100 a
b100 n
b100 q
b100 x
1*
#35
0*
#40
b11 ]
b11 }
b11 &"
b11111111111111111111111111110111 [
b11111111111111111111111111110111 e
b11111111111111111111111111110111 *"
b11 )
b11 0
b11 3
b11 A
b11 c
b11 g
b11 y
b11 h
b11111111111111111111111111110111 b
b11111111111111111111111111110111 k
b11111111111111111111111111110111 o
b11111111111111111111111111110111 )"
1D
b1100 \
b1100 f
b1100 #"
b11 ""
b10111 $"
b111 !"
b1111111101110001100000111 j
b1100 `
b1100 t
b1100 v
b11111111011100011000001110010011 /
b11111111011100011000001110010011 4
b11111111011100011000001110010011 6
b11111111011100011000001110010011 W
b11111111111111111111111111111111 ^
b11111111111111111111111111111111 p
b11111111111111111111111111111111 s
b1100 _
b1100 m
b1100 r
b1100 {
b1000 .
b1000 5
b1000 =
b1000 a
b1000 n
b1000 q
b1000 x
1*
#45
0*
#50
b111 ]
b111 }
b111 &"
bx ?
bx G
bx R
bx V
bx i
0@
b101 [
b101 e
b101 *"
1M
b1xx00000100 T
b110 B
b110 J
b110 O
b110 U
b110 d
b111 )
b111 0
b111 3
b111 A
b111 c
b111 g
b111 y
b111 h
bx b
bx k
bx o
bx )"
b110011 E
b110011 P
b110 C
b110 L
0D
b11 \
b11 f
b11 #"
b111 ""
b101 '
b101 ,
b101 2
b101 9
b101 Z
b101 %"
b101 ("
b10 $"
b100 !"
b100011111000100 j
b10000 `
b10000 t
b10000 v
b1000111110001000110011 /
b1000111110001000110011 4
b1000111110001000110011 6
b1000111110001000110011 W
bx ^
bx p
bx s
b10000 _
b10000 m
b10000 r
b10000 {
b1100 .
b1100 5
b1100 =
b1100 a
b1100 n
b1100 q
b1100 x
1*
#55
0*
#60
b100 ]
b100 }
b100 &"
b111 B
b111 J
b111 O
b111 U
b111 d
b100 )
b100 0
b100 3
b100 A
b100 c
b100 g
b100 y
b100 h
b111 [
b111 e
b111 *"
b111 C
b111 L
b1100 \
b1100 f
b1100 #"
b11 ""
b111 '
b111 ,
b111 2
b111 9
b111 Z
b111 %"
b111 ("
b100 $"
b101 !"
b1000001111100101 j
b10100 `
b10100 t
b10100 v
b10000011111001010110011 /
b10000011111001010110011 4
b10000011111001010110011 6
b10000011111001010110011 W
b10100 _
b10100 m
b10100 r
b10100 {
b10000 .
b10000 5
b10000 =
b10000 a
b10000 n
b10000 q
b10000 x
1*
#65
0*
#70
b1011 ]
b1011 }
b1011 &"
b1011 )
b1011 0
b1011 3
b1011 A
b1011 c
b1011 g
b1011 y
b1011 h
b0 B
b0 J
b0 O
b0 U
b0 d
b0 C
b0 L
b100 \
b100 f
b100 #"
b101 ""
b1000010100000101 j
b11000 `
b11000 t
b11000 v
b10000101000001010110011 /
b10000101000001010110011 4
b10000101000001010110011 6
b10000101000001010110011 W
b11000 _
b11000 m
b11000 r
b11000 {
b10100 .
b10100 5
b10100 =
b10100 a
b10100 n
b10100 q
b10100 x
1*
#75
0*
#80
b1001000 ^
b1001000 p
b1001000 s
b110000 b
b110000 k
b110000 o
b110000 )"
b1000 B
b1000 J
b1000 O
b1000 U
b1000 d
0;
b10 ?
b10 G
b10 R
b10 V
b10 i
1H
b1 I
b1 N
b1 S
b1000 ]
b1000 }
b1000 &"
b1000001010 T
b11 [
b11 e
b11 *"
b1100011 E
b1100011 P
b11 '
b11 ,
b11 2
b11 9
b11 Z
b11 %"
b11 ("
b111 $"
b10000 !"
b1001110010100010000 j
b1000 )
b1000 0
b1000 3
b1000 A
b1000 c
b1000 g
b1000 y
b1000 h
b11100 `
b11100 t
b11100 v
b10011100101000100001100011 /
b10011100101000100001100011 4
b10011100101000100001100011 6
b10011100101000100001100011 W
b1011 \
b1011 f
b1011 #"
b11100 _
b11100 m
b11100 r
b11100 {
b11000 .
b11000 5
b11000 =
b11000 a
b11000 n
b11000 q
b11000 x
1*
#85
0*
#90
18
b10 B
b10 J
b10 O
b10 U
b10 d
b0 ]
b0 }
b0 &"
1;
bx ?
bx G
bx R
bx V
bx i
0H
b10 I
b10 N
b10 S
b1xx00000100 T
b0 )
b0 0
b0 3
b0 A
b0 c
b0 g
b0 y
b0 h
b111 [
b111 e
b111 *"
bx b
bx k
bx o
bx )"
b110011 E
b110011 P
b10 C
b10 L
b1100 \
b1100 f
b1100 #"
b11 ""
b111 '
b111 ,
b111 2
b111 9
b111 Z
b111 %"
b111 ("
b100 $"
b100 !"
b1000001101000100 j
b100000 `
b100000 t
b100000 v
b10000011010001000110011 /
b10000011010001000110011 4
b10000011010001000110011 6
b10000011010001000110011 W
bx ^
bx p
bx s
b100000 _
b100000 m
b100000 r
b100000 {
b11100 .
b11100 5
b11100 =
b11100 a
b11100 n
b11100 q
b11100 x
1*
#95
0*
#100
1<
b101000 ^
b101000 p
b101000 s
b1000 b
b1000 k
b1000 o
b1000 )"
0;
b10 ?
b10 G
b10 R
b10 V
b10 i
1H
b1 I
b1 N
b1 S
b1000001010 T
b1000 B
b1000 J
b1000 O
b1000 U
b1000 d
b1100011 E
b1100011 P
b0 C
b0 L
b0 \
b0 f
b0 #"
b100 ""
b0 $"
b1000 !"
b10000001000 j
b0 [
b0 e
b0 *"
b101000 `
b101000 t
b101000 v
b100000010001100011 /
b100000010001100011 4
b100000010001100011 6
b100000010001100011 W
b0 '
b0 ,
b0 2
b0 9
b0 Z
b0 %"
b0 ("
b100100 _
b100100 m
b100100 r
b100100 {
b100000 .
b100000 5
b100000 =
b100000 a
b100000 n
b100000 q
b100000 x
1*
#105
0*
#110
b10 B
b10 J
b10 O
b10 U
b10 d
0<
b1 ]
b1 }
b1 &"
1;
bx ?
bx G
bx R
bx V
bx i
0H
b10 I
b10 N
b10 S
b1xx00000100 T
08
b1 )
b1 0
b1 3
b1 A
b1 c
b1 g
b1 y
b1 h
b101 [
b101 e
b101 *"
bx b
bx k
bx o
bx )"
b110011 E
b110011 P
b10 C
b10 L
b11 \
b11 f
b11 #"
b111 ""
b101 '
b101 ,
b101 2
b101 9
b101 Z
b101 %"
b101 ("
b10 $"
b100 !"
b100011101000100 j
b101100 `
b101100 t
b101100 v
b1000111010001000110011 /
b1000111010001000110011 4
b1000111010001000110011 6
b1000111010001000110011 W
bx ^
bx p
bx s
b101100 _
b101100 m
b101100 r
b101100 {
b101000 .
b101000 5
b101000 =
b101000 a
b101000 n
b101000 q
b101000 x
1*
#115
0*
#120
b1100 ]
b1100 }
b1100 &"
b1100 )
b1100 0
b1100 3
b1100 A
b1100 c
b1100 g
b1100 y
b1100 h
b0 B
b0 J
b0 O
b0 U
b0 d
b1011 [
b1011 e
b1011 *"
b0 C
b0 L
b1 \
b1 f
b1 #"
b100 ""
b1011 '
b1011 ,
b1011 2
b1011 9
b1011 Z
b1011 %"
b1011 ("
b101 $"
b111 !"
b1010010000000111 j
b110000 `
b110000 t
b110000 v
b10100100000001110110011 /
b10100100000001110110011 4
b10100100000001110110011 6
b10100100000001110110011 W
b110000 _
b110000 m
b110000 r
b110000 {
b101100 .
b101100 5
b101100 =
b101100 a
b101100 n
b101100 q
b101100 x
1*
#125
0*
#130
b111 ]
b111 }
b111 &"
b1000 B
b1000 J
b1000 O
b1000 U
b1000 d
1K
b111 )
b111 0
b111 3
b111 A
b111 c
b111 g
b111 y
b111 h
b101 [
b101 e
b101 *"
1D
b1100 \
b1100 f
b1100 #"
b111 ""
b101 '
b101 ,
b101 2
b101 9
b101 Z
b101 %"
b101 ("
b10 $"
b100000000100011100000111 j
b110100 `
b110100 t
b110100 v
b1000000001000111000001110110011 /
b1000000001000111000001110110011 4
b1000000001000111000001110110011 6
b1000000001000111000001110110011 W
b110100 _
b110100 m
b110100 r
b110100 {
b110000 .
b110000 5
b110000 =
b110000 a
b110000 n
b110000 q
b110000 x
1*
#135
0*
#140
b10001000 ^
b10001000 p
b10001000 s
b1010100 b
b1010100 k
b1010100 o
b1010100 )"
0;
b1 ?
b1 G
b1 R
b1 V
b1 i
1@
1(
b0 I
b0 N
b0 S
08
b1100000 ]
b1100000 }
b1100000 &"
b111000000 T
0K
b0 B
b0 J
b0 O
b0 U
b0 d
b1010100 [
b1010100 e
b1010100 *"
b100011 E
b100011 P
b10 C
b10 L
0D
b11 ""
b111 '
b111 ,
b111 2
b111 9
b111 Z
b111 %"
b111 ("
b111 $"
b10100 !"
b10001110001101010100 j
b1100000 )
b1100000 0
b1100000 3
b1100000 A
b1100000 c
b1100000 g
b1100000 y
b1100000 h
b111000 `
b111000 t
b111000 v
b100011100011010101000100011 /
b100011100011010101000100011 4
b100011100011010101000100011 6
b100011100011010101000100011 W
b1100 \
b1100 f
b1100 #"
b111000 _
b111000 m
b111000 r
b111000 {
b110100 .
b110100 5
b110100 =
b110100 a
b110100 n
b110100 q
b110100 x
1*
#145
0*
#150
b111 ]
b111 }
b111 &"
1;
b0 ?
b0 G
b0 R
b0 V
b0 i
0(
b1 :
b1 F
b1 Q
b1 Y
b1 |
b1100000 [
b1100000 e
b1100000 *"
0M
b10010010000 T
b1100000 )
b1100000 0
b1100000 3
b1100000 A
b1100000 c
b1100000 g
b1100000 y
b1100000 h
b1100000 b
b1100000 k
b1100000 o
b1100000 )"
b11 E
b11 P
b0 \
b0 f
b0 #"
b0 ""
b0 '
b0 ,
b0 2
b0 9
b0 Z
b0 %"
b0 ("
b0 $"
b10 !"
b11000000000001000010 j
b111100 `
b111100 t
b111100 v
b110000000000010000100000011 /
b110000000000010000100000011 4
b110000000000010000100000011 6
b110000000000010000100000011 W
b111 -
b111 1
b111 7
b111 X
b111 z
b10011000 ^
b10011000 p
b10011000 s
b111100 _
b111100 m
b111100 r
b111100 {
b111000 .
b111000 5
b111000 =
b111000 a
b111000 n
b111000 q
b111000 x
1*
#155
0*
#160
b10010 ]
b10010 }
b10010 &"
bx ?
bx G
bx R
bx V
bx i
0@
b0 :
b0 F
b0 Q
b0 Y
b0 |
b10 I
b10 N
b10 S
bx -
bx 1
bx 7
bx X
bx z
b1011 [
b1011 e
b1011 *"
1M
b1xx00000100 T
b10010 )
b10010 0
b10010 3
b10010 A
b10010 c
b10010 g
b10010 y
b10010 h
bx b
bx k
bx o
bx )"
b110011 E
b110011 P
b0 C
b0 L
b111 \
b111 f
b111 #"
b10 ""
b1011 '
b1011 ,
b1011 2
b1011 9
b1011 Z
b1011 %"
b1011 ("
b101 $"
b1001 !"
b1010001000001001 j
b1000000 `
b1000000 t
b1000000 v
b10100010000010010110011 /
b10100010000010010110011 4
b10100010000010010110011 6
b10100010000010010110011 W
bx ^
bx p
bx s
b1000000 _
b1000000 m
b1000000 r
b1000000 {
b111100 .
b111100 5
b111100 =
b111100 a
b111100 n
b111100 q
b111100 x
1*
#165
0*
#170
b1001000 ^
b1001000 p
b1001000 s
b1000 b
b1000 k
b1000 o
b1000 )"
1<
b1000100 ]
b1000100 }
b1000100 &"
b11 ?
b11 G
b11 R
b11 V
b11 i
b10 :
b10 F
b10 Q
b10 Y
b10 |
b0 I
b0 N
b0 S
1>
b11100100001 T
18
b0 )
b0 0
b0 3
b0 A
b0 c
b0 g
b0 y
b0 h
b0 [
b0 e
b0 *"
b1101111 E
b1101111 P
b0 \
b0 f
b0 #"
b0 ""
b0 '
b0 ,
b0 2
b0 9
b0 Z
b0 %"
b0 ("
b1000 $"
b11 !"
b10000000000000011 j
b1001000 `
b1001000 t
b1001000 v
b100000000000000111101111 /
b100000000000000111101111 4
b100000000000000111101111 6
b100000000000000111101111 W
b1000100 _
b1000100 m
b1000100 r
b1000100 {
b1000000 .
b1000000 5
b1000000 =
b1000000 a
b1000000 n
b1000000 q
b1000000 x
1*
#175
0*
#180
0<
bx ?
bx G
bx R
bx V
bx i
b0 :
b0 F
b0 Q
b0 Y
b0 |
b10 I
b10 N
b10 S
0>
b1xx00000100 T
08
b11001 )
b11001 0
b11001 3
b11001 A
b11001 c
b11001 g
b11001 y
b11001 h
b10010 [
b10010 e
b10010 *"
bx b
bx k
bx o
bx )"
b110011 E
b110011 P
b111 \
b111 f
b111 #"
b10 ""
b10010 '
b10010 ,
b10010 2
b10010 9
b10010 Z
b10010 %"
b10010 ("
b1001 $"
b10 !"
b10010001000000010 j
b1001100 `
b1001100 t
b1001100 v
b11001 ]
b11001 }
b11001 &"
b100100010000000100110011 /
b100100010000000100110011 4
b100100010000000100110011 6
b100100010000000100110011 W
bx ^
bx p
bx s
b1001100 _
b1001100 m
b1001100 r
b1001100 {
b1001000 .
b1001000 5
b1001000 =
b1001000 a
b1001000 n
b1001000 q
b1001000 x
1*
#185
0*
#190
b1101100 ^
b1101100 p
b1101100 s
b100000 b
b100000 k
b100000 o
b100000 )"
0;
b1 ?
b1 G
b1 R
b1 V
b1 i
1@
1(
b0 I
b0 N
b0 S
08
b1100100 ]
b1100100 }
b1100100 &"
b111000000 T
b0 B
b0 J
b0 O
b0 U
b0 d
b100000 [
b100000 e
b100000 *"
b100011 E
b100011 P
b10 C
b10 L
b11 ""
b11001 '
b11001 ,
b11001 2
b11001 9
b11001 Z
b11001 %"
b11001 ("
b10 $"
b0 !"
b1000100001101000000 j
b1100100 )
b1100100 0
b1100100 3
b1100100 A
b1100100 c
b1100100 g
b1100100 y
b1100100 h
b1010000 `
b1010000 t
b1010000 v
b10001000011010000000100011 /
b10001000011010000000100011 4
b10001000011010000000100011 6
b10001000011010000000100011 W
b1000100 \
b1000100 f
b1000100 #"
b1010000 _
b1010000 m
b1010000 r
b1010000 {
b1001100 .
b1001100 5
b1001100 =
b1001100 a
b1001100 n
b1001100 q
b1001100 x
1*
