$date
	Sun Nov 05 22:35:29 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & WriteData [31:0] $end
$var wire 32 ' ReadData [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 ) Instr [31:0] $end
$var wire 32 * DataAdr [31:0] $end
$scope module dmem1 $end
$var wire 1 $ clk $end
$var wire 32 + rd [31:0] $end
$var wire 1 " we $end
$var wire 32 , wd [31:0] $end
$var wire 32 - a [31:0] $end
$upscope $end
$scope module imem1 $end
$var wire 32 . rd [31:0] $end
$var wire 32 / a [31:0] $end
$upscope $end
$scope module rvsingle $end
$var wire 32 0 Instr [31:0] $end
$var wire 32 1 ReadData [31:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 2 Zero $end
$var wire 32 3 WriteData [31:0] $end
$var wire 2 4 ResultSrc [1:0] $end
$var wire 1 5 RegWrite $end
$var wire 1 6 PCSrc $end
$var wire 32 7 PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 1 8 Jump $end
$var wire 2 9 ImmSrc [1:0] $end
$var wire 1 : ALUSrc $end
$var wire 32 ; ALUResult [31:0] $end
$var wire 4 < ALUControl [3:0] $end
$scope module c $end
$var wire 1 6 PCSrc $end
$var wire 3 = funct3 [2:0] $end
$var wire 1 > funct7b5 $end
$var wire 7 ? op [6:0] $end
$var wire 1 @ beq $end
$var wire 1 2 Zero $end
$var wire 2 A ResultSrc [1:0] $end
$var wire 1 5 RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 8 Jump $end
$var wire 2 B ImmSrc [1:0] $end
$var wire 1 C Branch $end
$var wire 1 : ALUSrc $end
$var wire 2 D ALUOp [1:0] $end
$var wire 4 E ALUControl [3:0] $end
$scope module ad $end
$var wire 3 F funct3 [2:0] $end
$var wire 1 > funct7b5 $end
$var wire 1 G opb5 $end
$var wire 2 H ALUOp [1:0] $end
$var reg 4 I ALUControl [3:0] $end
$upscope $end
$scope module md $end
$var wire 7 J op [6:0] $end
$var wire 2 K ResultSrc [1:0] $end
$var wire 1 5 RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 8 Jump $end
$var wire 2 L ImmSrc [1:0] $end
$var wire 1 C Branch $end
$var wire 1 : ALUSrc $end
$var wire 2 M ALUOp [1:0] $end
$var reg 11 N controls [10:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 4 O ALUControl [3:0] $end
$var wire 1 : ALUSrc $end
$var wire 2 P ImmSrc [1:0] $end
$var wire 32 Q Instr [31:0] $end
$var wire 1 6 PCSrc $end
$var wire 32 R ReadData [31:0] $end
$var wire 1 5 RegWrite $end
$var wire 2 S ResultSrc [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 2 Zero $end
$var wire 32 T WriteData [31:0] $end
$var wire 32 U SrcB [31:0] $end
$var wire 32 V SrcA [31:0] $end
$var wire 32 W Result [31:0] $end
$var wire 32 X PCTarget [31:0] $end
$var wire 32 Y PCPlus4 [31:0] $end
$var wire 32 Z PCNext [31:0] $end
$var wire 32 [ PC [31:0] $end
$var wire 32 \ ImmExt [31:0] $end
$var wire 32 ] ALUResult [31:0] $end
$scope module alu $end
$var wire 4 ^ ALUControl [3:0] $end
$var wire 32 _ SrcB [31:0] $end
$var wire 32 ` SrcA [31:0] $end
$var reg 32 a ALUResult [31:0] $end
$var reg 1 2 Zero $end
$var reg 32 b temp_result [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 c immsrc [1:0] $end
$var wire 25 d instr [31:7] $end
$var reg 32 e immext [31:0] $end
$upscope $end
$scope module pcadd4 $end
$var wire 32 f b [31:0] $end
$var wire 32 g y [31:0] $end
$var wire 32 h a [31:0] $end
$upscope $end
$scope module pcaddbranch $end
$var wire 32 i b [31:0] $end
$var wire 32 j y [31:0] $end
$var wire 32 k a [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 l d0 [31:0] $end
$var wire 32 m d1 [31:0] $end
$var wire 1 6 s $end
$var wire 32 n y [31:0] $end
$var parameter 32 o WIDTH $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 p d [31:0] $end
$var wire 1 % reset $end
$var parameter 32 q WIDTH $end
$var reg 32 r q [31:0] $end
$upscope $end
$scope module resultmux $end
$var wire 32 s d0 [31:0] $end
$var wire 32 t d1 [31:0] $end
$var wire 32 u d2 [31:0] $end
$var wire 2 v s [1:0] $end
$var wire 32 w y [31:0] $end
$var parameter 32 x WIDTH $end
$upscope $end
$scope module rf $end
$var wire 1 5 RegWrite $end
$var wire 1 $ clk $end
$var wire 5 y rd_addr [4:0] $end
$var wire 5 z rs1_addr [4:0] $end
$var wire 32 { rs1_data [31:0] $end
$var wire 5 | rs2_addr [4:0] $end
$var wire 32 } rs2_data [31:0] $end
$var wire 32 ~ write_data [31:0] $end
$var integer 32 !" i [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 "" d0 [31:0] $end
$var wire 32 #" d1 [31:0] $end
$var wire 1 : s $end
$var wire 32 $" y [31:0] $end
$var parameter 32 %" WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 %"
b100000 x
b100000 q
b100000 o
$end
#0
$dumpvars
b101 $"
b101 #"
b0 ""
b100000 !"
b101 ~
b0 }
b101 |
b0 {
b0 z
b10 y
b101 w
b0 v
b100 u
bx t
b101 s
b0 r
b100 p
b100 n
b101 m
b100 l
b0 k
b101 j
b101 i
b0 h
b100 g
b100 f
b101 e
b1010000000000010 d
b0 c
b101 b
b101 a
b0 `
b101 _
b0 ^
b101 ]
b101 \
b0 [
b100 Z
b100 Y
b101 X
b101 W
b0 V
b101 U
b0 T
b0 S
bx R
b10100000000000100010011 Q
b0 P
b0 O
b10010000100 N
b10 M
b0 L
b0 K
b10011 J
b0 I
b10 H
0G
b0 F
b0 E
b10 D
0C
b0 B
b0 A
0@
b10011 ?
0>
b0 =
b0 <
b101 ;
1:
b0 9
08
b0 7
06
15
b0 4
b0 3
02
bx 1
b10100000000000100010011 0
b0 /
b10100000000000100010011 .
b101 -
b0 ,
bx +
b101 *
b10100000000000100010011 )
b0 (
bx '
b0 &
1%
1$
b101 #
0"
b0 !
$end
#5
0$
#10
1$
#15
0$
#20
1$
#22
0%
#25
0$
#30
b1100 W
b1100 w
b1100 ~
b1100 #
b1100 *
b1100 -
b1100 ;
b1100 ]
b1100 a
b1100 s
b1100 b
b1100 U
b1100 _
b1100 $"
b1100 \
b1100 e
b1100 i
b1100 #"
b1100 |
b11 y
b11000000000000011 d
b1000 Z
b1000 n
b1000 p
b110000000000000110010011 )
b110000000000000110010011 .
b110000000000000110010011 0
b110000000000000110010011 Q
b10000 X
b10000 j
b10000 m
b1000 Y
b1000 g
b1000 l
b1000 u
b100 (
b100 /
b100 7
b100 [
b100 h
b100 k
b100 r
1$
#35
0$
#40
b11 W
b11 w
b11 ~
b11111111111111111111111111110111 U
b11111111111111111111111111110111 _
b11111111111111111111111111110111 $"
b11 #
b11 *
b11 -
b11 ;
b11 ]
b11 a
b11 s
b11 b
b11111111111111111111111111110111 \
b11111111111111111111111111110111 e
b11111111111111111111111111110111 i
b11111111111111111111111111110111 #"
1>
b1100 V
b1100 `
b1100 {
b11 z
b10111 |
b111 y
b1111111101110001100000111 d
b1100 Z
b1100 n
b1100 p
b11111111011100011000001110010011 )
b11111111011100011000001110010011 .
b11111111011100011000001110010011 0
b11111111011100011000001110010011 Q
b11111111111111111111111111111111 X
b11111111111111111111111111111111 j
b11111111111111111111111111111111 m
b1100 Y
b1100 g
b1100 l
b1100 u
b1000 (
b1000 /
b1000 7
b1000 [
b1000 h
b1000 k
b1000 r
1$
#45
0$
#50
b111 W
b111 w
b111 ~
bx 9
bx B
bx L
bx P
bx c
0:
b101 U
b101 _
b101 $"
1G
b1xx00000100 N
b110 <
b110 E
b110 I
b110 O
b110 ^
b111 #
b111 *
b111 -
b111 ;
b111 ]
b111 a
b111 s
b111 b
bx \
bx e
bx i
bx #"
b110011 ?
b110011 J
b110 =
b110 F
0>
b11 V
b11 `
b11 {
b111 z
b101 !
b101 &
b101 ,
b101 3
b101 T
b101 }
b101 ""
b10 |
b100 y
b100011111000100 d
b10000 Z
b10000 n
b10000 p
b1000111110001000110011 )
b1000111110001000110011 .
b1000111110001000110011 0
b1000111110001000110011 Q
bx X
bx j
bx m
b10000 Y
b10000 g
b10000 l
b10000 u
b1100 (
b1100 /
b1100 7
b1100 [
b1100 h
b1100 k
b1100 r
1$
#55
0$
#60
b100 W
b100 w
b100 ~
1@
b111 <
b111 E
b111 I
b111 O
b111 ^
b100 #
b100 *
b100 -
b100 ;
b100 ]
b100 a
b100 s
b100 b
b111 U
b111 _
b111 $"
b111 =
b111 F
b1100 V
b1100 `
b1100 {
b11 z
b111 !
b111 &
b111 ,
b111 3
b111 T
b111 }
b111 ""
b100 |
b101 y
b1000001111100101 d
b10100 Z
b10100 n
b10100 p
b10000011111001010110011 )
b10000011111001010110011 .
b10000011111001010110011 0
b10000011111001010110011 Q
b10100 Y
b10100 g
b10100 l
b10100 u
b10000 (
b10000 /
b10000 7
b10000 [
b10000 h
b10000 k
b10000 r
1$
#65
0$
#70
b1011 W
b1011 w
b1011 ~
b1011 #
b1011 *
b1011 -
b1011 ;
b1011 ]
b1011 a
b1011 s
b1011 b
0@
b0 <
b0 E
b0 I
b0 O
b0 ^
b0 =
b0 F
b100 V
b100 `
b100 {
b101 z
b1000010100000101 d
b11000 Z
b11000 n
b11000 p
b10000101000001010110011 )
b10000101000001010110011 .
b10000101000001010110011 0
b10000101000001010110011 Q
b11000 Y
b11000 g
b11000 l
b11000 u
b10100 (
b10100 /
b10100 7
b10100 [
b10100 h
b10100 k
b10100 r
1$
#75
0$
#80
b1001000 X
b1001000 j
b1001000 m
b110000 \
b110000 e
b110000 i
b110000 #"
b1000 <
b1000 E
b1000 I
b1000 O
b1000 ^
05
b10 9
b10 B
b10 L
b10 P
b10 c
1C
b1 D
b1 H
b1 M
b1000 W
b1000 w
b1000 ~
b1000001010 N
b11 U
b11 _
b11 $"
b1100011 ?
b1100011 J
b11 !
b11 &
b11 ,
b11 3
b11 T
b11 }
b11 ""
b111 |
b10000 y
b1001110010100010000 d
b1000 #
b1000 *
b1000 -
b1000 ;
b1000 ]
b1000 a
b1000 s
b1000 b
b11100 Z
b11100 n
b11100 p
b10011100101000100001100011 )
b10011100101000100001100011 .
b10011100101000100001100011 0
b10011100101000100001100011 Q
b1011 V
b1011 `
b1011 {
b11100 Y
b11100 g
b11100 l
b11100 u
b11000 (
b11000 /
b11000 7
b11000 [
b11000 h
b11000 k
b11000 r
1$
#85
0$
#90
12
b10 <
b10 E
b10 I
b10 O
b10 ^
b0 W
b0 w
b0 ~
15
bx 9
bx B
bx L
bx P
bx c
0C
b10 D
b10 H
b10 M
b1xx00000100 N
b0 #
b0 *
b0 -
b0 ;
b0 ]
b0 a
b0 s
b0 b
b111 U
b111 _
b111 $"
bx \
bx e
bx i
bx #"
b110011 ?
b110011 J
b10 =
b10 F
b1100 V
b1100 `
b1100 {
b11 z
b111 !
b111 &
b111 ,
b111 3
b111 T
b111 }
b111 ""
b100 |
b100 y
b1000001101000100 d
b100000 Z
b100000 n
b100000 p
b10000011010001000110011 )
b10000011010001000110011 .
b10000011010001000110011 0
b10000011010001000110011 Q
bx X
bx j
bx m
b100000 Y
b100000 g
b100000 l
b100000 u
b11100 (
b11100 /
b11100 7
b11100 [
b11100 h
b11100 k
b11100 r
1$
#95
0$
#100
16
b101000 X
b101000 j
b101000 m
b1000 \
b1000 e
b1000 i
b1000 #"
05
b10 9
b10 B
b10 L
b10 P
b10 c
1C
b1 D
b1 H
b1 M
b1000001010 N
b1000 <
b1000 E
b1000 I
b1000 O
b1000 ^
b1100011 ?
b1100011 J
b0 =
b0 F
b0 V
b0 `
b0 {
b100 z
b0 |
b1000 y
b10000001000 d
b0 U
b0 _
b0 $"
b101000 Z
b101000 n
b101000 p
b100000010001100011 )
b100000010001100011 .
b100000010001100011 0
b100000010001100011 Q
b0 !
b0 &
b0 ,
b0 3
b0 T
b0 }
b0 ""
b100100 Y
b100100 g
b100100 l
b100100 u
b100000 (
b100000 /
b100000 7
b100000 [
b100000 h
b100000 k
b100000 r
1$
#105
0$
#110
06
b10 <
b10 E
b10 I
b10 O
b10 ^
b1 W
b1 w
b1 ~
15
bx 9
bx B
bx L
bx P
bx c
0C
b10 D
b10 H
b10 M
b1xx00000100 N
02
b1 #
b1 *
b1 -
b1 ;
b1 ]
b1 a
b1 s
b1 b
b101 U
b101 _
b101 $"
bx \
bx e
bx i
bx #"
b110011 ?
b110011 J
b10 =
b10 F
b11 V
b11 `
b11 {
b111 z
b101 !
b101 &
b101 ,
b101 3
b101 T
b101 }
b101 ""
b10 |
b100 y
b100011101000100 d
b101100 Z
b101100 n
b101100 p
b1000111010001000110011 )
b1000111010001000110011 .
b1000111010001000110011 0
b1000111010001000110011 Q
bx X
bx j
bx m
b101100 Y
b101100 g
b101100 l
b101100 u
b101000 (
b101000 /
b101000 7
b101000 [
b101000 h
b101000 k
b101000 r
1$
#115
0$
#120
b1100 W
b1100 w
b1100 ~
b1100 #
b1100 *
b1100 -
b1100 ;
b1100 ]
b1100 a
b1100 s
b1100 b
b0 <
b0 E
b0 I
b0 O
b0 ^
b1011 U
b1011 _
b1011 $"
b0 =
b0 F
b1 V
b1 `
b1 {
b100 z
b1011 !
b1011 &
b1011 ,
b1011 3
b1011 T
b1011 }
b1011 ""
b101 |
b111 y
b1010010000000111 d
b110000 Z
b110000 n
b110000 p
b10100100000001110110011 )
b10100100000001110110011 .
b10100100000001110110011 0
b10100100000001110110011 Q
b110000 Y
b110000 g
b110000 l
b110000 u
b101100 (
b101100 /
b101100 7
b101100 [
b101100 h
b101100 k
b101100 r
1$
#125
0$
#130
b111 W
b111 w
b111 ~
b1000 <
b1000 E
b1000 I
b1000 O
b1000 ^
b111 #
b111 *
b111 -
b111 ;
b111 ]
b111 a
b111 s
b111 b
b101 U
b101 _
b101 $"
1>
b1100 V
b1100 `
b1100 {
b111 z
b101 !
b101 &
b101 ,
b101 3
b101 T
b101 }
b101 ""
b10 |
b100000000100011100000111 d
b110100 Z
b110100 n
b110100 p
b1000000001000111000001110110011 )
b1000000001000111000001110110011 .
b1000000001000111000001110110011 0
b1000000001000111000001110110011 Q
b110100 Y
b110100 g
b110100 l
b110100 u
b110000 (
b110000 /
b110000 7
b110000 [
b110000 h
b110000 k
b110000 r
1$
#135
0$
#140
b10001000 X
b10001000 j
b10001000 m
b1010100 \
b1010100 e
b1010100 i
b1010100 #"
05
b1 9
b1 B
b1 L
b1 P
b1 c
1:
1"
b0 D
b0 H
b0 M
02
b1100000 W
b1100000 w
b1100000 ~
b111000000 N
b0 <
b0 E
b0 I
b0 O
b0 ^
b1010100 U
b1010100 _
b1010100 $"
b100011 ?
b100011 J
b10 =
b10 F
0>
b11 z
b111 !
b111 &
b111 ,
b111 3
b111 T
b111 }
b111 ""
b111 |
b10100 y
b10001110001101010100 d
b1100000 #
b1100000 *
b1100000 -
b1100000 ;
b1100000 ]
b1100000 a
b1100000 s
b1100000 b
b111000 Z
b111000 n
b111000 p
b100011100011010101000100011 )
b100011100011010101000100011 .
b100011100011010101000100011 0
b100011100011010101000100011 Q
b1100 V
b1100 `
b1100 {
b111000 Y
b111000 g
b111000 l
b111000 u
b110100 (
b110100 /
b110100 7
b110100 [
b110100 h
b110100 k
b110100 r
1$
#145
0$
#150
b111 W
b111 w
b111 ~
15
b0 9
b0 B
b0 L
b0 P
b0 c
0"
b1 4
b1 A
b1 K
b1 S
b1 v
b1100000 U
b1100000 _
b1100000 $"
0G
b10010010000 N
b1100000 #
b1100000 *
b1100000 -
b1100000 ;
b1100000 ]
b1100000 a
b1100000 s
b1100000 b
b1100000 \
b1100000 e
b1100000 i
b1100000 #"
b11 ?
b11 J
b0 V
b0 `
b0 {
b0 z
b0 !
b0 &
b0 ,
b0 3
b0 T
b0 }
b0 ""
b0 |
b10 y
b11000000000001000010 d
b111100 Z
b111100 n
b111100 p
b110000000000010000100000011 )
b110000000000010000100000011 .
b110000000000010000100000011 0
b110000000000010000100000011 Q
b111 '
b111 +
b111 1
b111 R
b111 t
b10011000 X
b10011000 j
b10011000 m
b111100 Y
b111100 g
b111100 l
b111100 u
b111000 (
b111000 /
b111000 7
b111000 [
b111000 h
b111000 k
b111000 r
1$
#155
0$
#160
b10010 W
b10010 w
b10010 ~
bx 9
bx B
bx L
bx P
bx c
0:
b0 4
b0 A
b0 K
b0 S
b0 v
b10 D
b10 H
b10 M
bx '
bx +
bx 1
bx R
bx t
b1011 U
b1011 _
b1011 $"
1G
b1xx00000100 N
b10010 #
b10010 *
b10010 -
b10010 ;
b10010 ]
b10010 a
b10010 s
b10010 b
bx \
bx e
bx i
bx #"
b110011 ?
b110011 J
b0 =
b0 F
b111 V
b111 `
b111 {
b10 z
b1011 !
b1011 &
b1011 ,
b1011 3
b1011 T
b1011 }
b1011 ""
b101 |
b1001 y
b1010001000001001 d
b1000000 Z
b1000000 n
b1000000 p
b10100010000010010110011 )
b10100010000010010110011 .
b10100010000010010110011 0
b10100010000010010110011 Q
bx X
bx j
bx m
b1000000 Y
b1000000 g
b1000000 l
b1000000 u
b111100 (
b111100 /
b111100 7
b111100 [
b111100 h
b111100 k
b111100 r
1$
#165
0$
#170
b1001000 X
b1001000 j
b1001000 m
b1000 \
b1000 e
b1000 i
b1000 #"
16
b1000100 W
b1000100 w
b1000100 ~
b11 9
b11 B
b11 L
b11 P
b11 c
b10 4
b10 A
b10 K
b10 S
b10 v
b0 D
b0 H
b0 M
18
b11100100001 N
12
b0 #
b0 *
b0 -
b0 ;
b0 ]
b0 a
b0 s
b0 b
b0 U
b0 _
b0 $"
b1101111 ?
b1101111 J
b0 V
b0 `
b0 {
b0 z
b0 !
b0 &
b0 ,
b0 3
b0 T
b0 }
b0 ""
b1000 |
b11 y
b10000000000000011 d
b1001000 Z
b1001000 n
b1001000 p
b100000000000000111101111 )
b100000000000000111101111 .
b100000000000000111101111 0
b100000000000000111101111 Q
b1000100 Y
b1000100 g
b1000100 l
b1000100 u
b1000000 (
b1000000 /
b1000000 7
b1000000 [
b1000000 h
b1000000 k
b1000000 r
1$
#175
0$
#180
06
bx 9
bx B
bx L
bx P
bx c
b0 4
b0 A
b0 K
b0 S
b0 v
b10 D
b10 H
b10 M
08
b1xx00000100 N
02
b11001 #
b11001 *
b11001 -
b11001 ;
b11001 ]
b11001 a
b11001 s
b11001 b
b10010 U
b10010 _
b10010 $"
bx \
bx e
bx i
bx #"
b110011 ?
b110011 J
b111 V
b111 `
b111 {
b10 z
b10010 !
b10010 &
b10010 ,
b10010 3
b10010 T
b10010 }
b10010 ""
b1001 |
b10 y
b10010001000000010 d
b1001100 Z
b1001100 n
b1001100 p
b11001 W
b11001 w
b11001 ~
b100100010000000100110011 )
b100100010000000100110011 .
b100100010000000100110011 0
b100100010000000100110011 Q
bx X
bx j
bx m
b1001100 Y
b1001100 g
b1001100 l
b1001100 u
b1001000 (
b1001000 /
b1001000 7
b1001000 [
b1001000 h
b1001000 k
b1001000 r
1$
#185
0$
#190
b1101100 X
b1101100 j
b1101100 m
b100000 \
b100000 e
b100000 i
b100000 #"
05
b1 9
b1 B
b1 L
b1 P
b1 c
1:
1"
b0 D
b0 H
b0 M
02
b1100100 W
b1100100 w
b1100100 ~
b111000000 N
b0 <
b0 E
b0 I
b0 O
b0 ^
b100000 U
b100000 _
b100000 $"
b100011 ?
b100011 J
b10 =
b10 F
b11 z
b11001 !
b11001 &
b11001 ,
b11001 3
b11001 T
b11001 }
b11001 ""
b10 |
b0 y
b1000100001101000000 d
b1100100 #
b1100100 *
b1100100 -
b1100100 ;
b1100100 ]
b1100100 a
b1100100 s
b1100100 b
b1010000 Z
b1010000 n
b1010000 p
b10001000011010000000100011 )
b10001000011010000000100011 .
b10001000011010000000100011 0
b10001000011010000000100011 Q
b1000100 V
b1000100 `
b1000100 {
b1010000 Y
b1010000 g
b1010000 l
b1010000 u
b1001100 (
b1001100 /
b1001100 7
b1001100 [
b1001100 h
b1001100 k
b1001100 r
1$
